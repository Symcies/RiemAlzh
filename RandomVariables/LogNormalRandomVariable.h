#ifndef _LogNormalRandomVariable_h
#define _LogNormalRandomVariable_h


#include "AbstractRandomVariable.h"

class LogNormalRandomVariable : public AbstractRandomVariable {
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructor(s) / Destructor :
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    
    LogNormalRandomVariable(double Mean, double Variance);
    
    ~LogNormalRandomVariable();
    
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    inline double GetVariance() {return m_Variance; }

    inline double GetMean() { return m_Mean; }
    
    inline void SetMean(double Mean) { m_Mean = Mean; }
    
    inline void SetVariance(double Variance) { m_Variance = Variance; }
    
    /// Draw a sample
    virtual double Sample();
    
    /// Compute the likelihood given a current state
    virtual double Likelihood(double X);
    
    /// Compute the Log likelihood given a current state
    virtual double LogLikelihood(double X);

protected:
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Attribute(s)
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    /// Mean of the Gaussian
    double m_Mean;

    /// Variance of the Gaussian
    double m_Variance;

};


#endif //_LogNormalRandomVariable_h
