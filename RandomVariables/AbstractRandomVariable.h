#ifndef _AbstractRandomVariable_h
#define _AbstractRandomVariable_h

#include <random>       // random_device
#include <iostream>     // cout

class AbstractRandomVariable {
public:

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // typedef :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructor(s) / Destructor :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Getter(s) and Setter(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    // / Calculate the density
    virtual double GetDensity() const = 0;

    // Get current state
    inline double GetCurrentState() const {return m_CurrentState;};

    // Set current state
    inline void SetCurrentState(double NewState) { m_CurrentState = NewState; }

    //


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Other method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    // Sample to update the current state
    virtual void Sample() = 0;



protected:

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Attribute(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    // Current State
    double m_CurrentState;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Other method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

};


#endif //_AbstractRandomVariable_h
