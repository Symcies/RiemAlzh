#ifndef _AbstractBaseManifold_h
#define _AbstractBaseManifold_h

#include <iostream>

class AbstractBaseManifold {
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // typedef :
    ////////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructor(s) / Destructor :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    AbstractBaseManifold();
    ~AbstractBaseManifold();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Encapsulation method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Other method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    /// Compute the geodesic
    virtual double ComputeGeodesic(double P0, double T0, double V0, double TimePoint) = 0;

    /// Compute the geodesic derivative
    virtual double ComputeGeodesicDerivative(double P0, double T0, double V0, double TimePoint) = 0;

    /// Compute the parallel transport
    virtual double ComputeParallelTransport(double P0, double T0, double V0, double SpaceShift, double TimePoint) = 0;

    /// Compute the parallel curve
    virtual double ComputeParallelCurve(double P0, double T0, double V0, double SpaceShift, double TimePoint) = 0;

    /// Compute the scalar product
    virtual double ComputeScalarProduct(double U, double V, double ApplicationPoint) = 0;



protected:
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////



    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Attribute(s)
    ////////////////////////////////////////////////////////////////////////////////////////////////////

};


#endif //_AbstractBaseManifold_h
