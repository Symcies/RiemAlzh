#ifndef ReadData_h
#define ReadData_h

typedef double ScalarType;

#include <utility>
#include <iostream>
#include <fstream>
#include <string>
#include <ios>

#include "DataSettings.h"
#include "LinearAlgebra.h"


class ReadData {
public:
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// typedef :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

        
    typedef typename LinearAlgebra<ScalarType>::MatrixType MatrixType;
    typedef typename LinearAlgebra<ScalarType>::VectorType VectorType;
    
    typedef std::vector< std::vector< std::pair< LinearAlgebra<ScalarType>::VectorType, double> > > Data;
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Constructor(s) / Destructor :
    ////////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Encapsulation method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Other method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    
    /// Open multivariate files
    static Data OpenFilesMultivariate(DataSettings& DS, int NbMaxOfSubjects);
    
    /// Open network propagation files
    static MatrixType OpenKernel(std::string FilePath);
    
    
    
protected:
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Attribute(s)
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    
    
};

#endif //ReadData_h
