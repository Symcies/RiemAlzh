#pragma once

#include <string>

#include "tinyxml2.h"

#include "InputsAssert.h"

namespace io {

class AlgorithmSettings {

public:

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructor(s) / Destructor :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    AlgorithmSettings(char *xml_file);

    ~AlgorithmSettings();

    ////////////////////////////////////////////////////////////////////////////////////////////////
    /// Encapsulation method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    /// Get the maximum number of iterations
    unsigned int GetMaximumNumberOfIterations() { return max_num_iter_; }

    /// Get the number of burn-in iterations
    unsigned int GetNumberOfBurnInIterations() { return num_burnin_iter_; }

    /// Get the number of iterations to wait till newt output display
    unsigned int GetOutputDisplayIteration() { return output_iter_; }

    /// Get the number of iteration to wait till next data saving
    unsigned int GetDataSaveIteration() { return data_save_iter_; }


    ////////////////////////////////////////////////////////////////////////////////////////////////
    /// Other method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////

private:

    ////////////////////////////////////////////////////////////////////////////////////////////////
    /// Iteration attribute(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    /// Maximum number of iteration of the Algorithm
    unsigned int max_num_iter_;

    /// Number of Burn-In Iterations
    unsigned int num_burnin_iter_;

    ////////////////////////////////////////////////////////////////////////////////////////////////
    /// Display attribute(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    /// Number of iterations to wait till newt output display
    unsigned int output_iter_;

    /// Number of iteration to wait till next data saving
    unsigned int data_save_iter_;


    ////////////////////////////////////////////////////////////////////////////////////////////////
    /// Methods(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    /// Copy constructor, private to prevent copy
    AlgorithmSettings(const AlgorithmSettings&);

    /// Assignment operator, private to prevent copy
    AlgorithmSettings& operator=(const AlgorithmSettings&);

};


}
