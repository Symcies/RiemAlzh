#pragma once

#include <string>
#include <vector>

#include "tinyxml2.h"

#include "InputsAssert.h"

namespace io {

class SamplerSettings {
 public:
  
  ////////////////////////////////////////////////////////////////////////////////////////////////
  /// Constructor(s) / Destructor :
  ////////////////////////////////////////////////////////////////////////////////////////////////
  
  SamplerSettings(const char *xml_file);
  
  ~SamplerSettings();
  
  ////////////////////////////////////////////////////////////////////////////////////////////////
  /// Encapsulation method(s) :
  ////////////////////////////////////////////////////////////////////////////////////////////////

  unsigned int GetNumberOfSamplers() const { return number_of_samplers_; }
  
  std::string GetSamplerType(unsigned int x) const { return sampler_types_.at(x); }
  
  unsigned int GetSamplerNumberOfIterations(unsigned int x) const { return sampler_number_of_iterations_.at(x); }

 private:
  
  ////////////////////////////////////////////////////////////////////////////////////////////////
  /// Methods(s) :
  ////////////////////////////////////////////////////////////////////////////////////////////////

  /// Add a sampler based on the information provided by the xml file
  void AddSampler(tinyxml2::XMLElement* sampler);
  
  ////////////////////////////////////////////////////////////////////////////////////////////////
  /// Attribute(s) :
  ////////////////////////////////////////////////////////////////////////////////////////////////
  
  /// Number of sampler
  unsigned int number_of_samplers_;
  
  /// Types of sampler
  std::vector<std::string> sampler_types_;
  
  /// Number of iteration for each sampler
  std::vector<unsigned int> sampler_number_of_iterations_;
  
  
};


}