#pragma once

#include "AbstractRandomVariable.h"

class UniformRandomVariable : public AbstractRandomVariable { 
 public:
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Constructor(s) / Destructor :
  ////////////////////////////////////////////////////////////////////////////////////////////////////

  UniformRandomVariable(ScalarType Min, ScalarType Max);
  ~UniformRandomVariable();

  ////////////////////////////////////////////////////////////////////////////////////////////////
  // Getter(s) and Setter(s) :
  ////////////////////////////////////////////////////////////////////////////////////////////////

  virtual ScalarType GetParameter(std::string ParameterName) const;
  virtual ScalarType GetParameter(int ParameterKey) const;
  
  inline double GetMin() const { return m_Min; }

  inline double GetMax() const { return m_Max; }

  inline void SetMin(double Min) { m_Min = Min; };

  inline void SetMax(double Max) {m_Max = Max; };

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Method(s) :
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  
  /// Draw a sample
  virtual double Sample();

  /// Compute the likelihood given a current state
  virtual double Likelihood(double X);
  
  /// Compute the loglikelihood given a current state
  virtual double LogLikelihood(double X);
  
  /// Update the random variable parameters
  virtual void Update(StringScalarHash Parameters);
  virtual void Update(IntScalarHash    Parameters);
  
 protected:
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Method(s) :
  ////////////////////////////////////////////////////////////////////////////////////////////////////


  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Attribute(s)
  ////////////////////////////////////////////////////////////////////////////////////////////////////

  /// Min of the uniform distribution
  double m_Min;

  /// Max of the uniform distribution
  double m_Max;

};


