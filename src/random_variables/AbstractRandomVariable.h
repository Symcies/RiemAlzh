
#ifndef _AbstractRandomVariable_h
#define _AbstractRandomVariable_h

#include <random>
#include <iostream>     // For cout : only for debugging part

class AbstractRandomVariable {
public:
    ////////////////////////////////////////////////////////////////////////////////////////////////
    // typedef :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    
    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Getter(s) and Setter(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Other method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////

    /// Draw a new sample
    virtual double Sample() = 0;

    /// Compute the likelihood
    virtual double Likelihood(double X) = 0;
    
    /// Compute the log likelihood
    virtual double LogLikelihood(double X) = 0;
    
protected:

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Method(s) :
    ////////////////////////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Attribute(s)
    ////////////////////////////////////////////////////////////////////////////////////////////////






};


#endif //_AbstractRandomVariable_h
